"                                                                     shacham


  TODO after operation, followed by 'forget net' -- fs.load mknet
    fails reporting struct??




















                                                                     shacham
: xltxlist  63 fragments seem excesive. As xl uses pointers to link to-be-xmit
    descriptors, it seems okay to reduce to 7 fragments.






















                                                                     shacham

mbuf
  Note: All operations assume mbuf chain of length one. In other words,
   mbuf headers and data are all in a single contiguous memory.


: m_data  Address of current packet start in given mbuf.
: m_init  Init an mbuf for a packet of length l.
  Even though the data size is less than #MBUF, for mbuf headers, XL didn't like
  anything but the nice 2048 as size.  As Ethernet packets are 1540 bytes,
  no problem should be caused down the road. (I think.)

: m_adjlen  Adjust mbuf length by len, without changing the start of data.
   Used to modify buffer length, assuming current mbuf fits the new data len.
: m_adj  Adjust mbuf by len, assuming a single mbuf and length larger than len.
   For input packets, len is positive, thus data pointer is incremented
   and packet length is reduced accordingly.
   For output packets, len is negative, decrementing the data pointer
   and increasing packet length.
: m_get  Always allocate a cluster.  Note: as bkalloc returns 4K for any
   request above 2K, ask for 2K - sizeof(cell)
   TODO - handle 256 byte mbuf
: m_freem  invoke bkfree for a single buffer.

                                                                     shacham
: xlrxlst  must be on 8-byte boundary, else xl is misaligned, causing up stall
   Note: As list is never freed, allot-ing is okay, i.e. no need to malloc.























: pcien  Enable regster of PCI slot and calculate data port for reg.


: pciid  Read id of PCI slot.


: pcicls Read class of PCI slot.


: pcihdr Read header of PCI slot.

: pcibus Enable busmaster, port and memory i/o.












                                                                     shacham

: xlcmd Commands are to register 14 ($E).
: xlrdy Wait till XL is ready, else alert. No need for delay.

: xlcmdrdy Issue given xl command then wait for xl ready.
: xlcmdwt Some commands require extra delay, so is suggested.
: xleepwt Wait for xl eeprom ready.

: xlwin Select an XL window (eeprom is in win 0, for example)
: xlinb2  Input 2 bytes into 16-bit. Instead of using inw, at least for now.
: xleeprom Read an XL eeprom word (16-bit). Note the mandatory wait for
  eeprom response.
: xlstop Stop all xl activities: disable rx, stats, interrupts; discard rx;
  disable tx; stop coax; ack ints; enable no stats and no ints;
: xlreset Reset XL, RX and TX.  An extra delay is required for RX reset.
  Some extra delay is issued post all reset commands.
: xleepcfg Fetch XL configuration from eeprom (in XL window 0):
   MAC address from words 0-2; store as byte array in network order
   capabilities from word 16
   xcvr from word 19 (lower 16-bit, word 18, are ignored)
: xlcoax Coax not supported, so disable.
: xlcfg Fetch media from word 0 of window 3; For 3x905B, configure XCVR_AUTO;
   Issue coax-stop.

                                                                     shacham
: xlfind?  Locate the first 3Com 3c905B Fast Ethernet XL, if any.
  Support for other XL NICs could be added later, carefully, one at a time.
  After all, the system is not supposed to be a generic, support-all-hw, OS,
  at least imo.
  Even though PORTEN, MEMEN, and BUSMASTEREN are set, rewrite to trigger rcv.
: xlattach  Attach an XL nic.
: xldetach  Don't forget net without it.

: xlstat  First 10 stats are byte fields, last 2 are 16-bit fields.
  (16-bit in xl are, conveniently, little endian.)  Read status just in case.
  Read the register from win 4, trying to follow xl to the letter.













                                                                     shacham

: xladdr Set mac address in XL (win 2, bytes 0-5, network order)


















: (align8)  Align buffers on 8-byte boundary, till generic services exist.



                                                                     shacham
: xlrxmget  Allocate and init a buffer for xl receive.
  Even though the data size is less than #MBUF, for mbuf headers, XL didn't like
  anything but the nice 2048 as size.  As Ethernet packets are 1540 bytes,
  no problem should be caused down the road. (I think.)

: xlrxinit  Init rcv ring-buffer.





: xltxinit  Init transmit descriptors.




: xlinit Init XL - reset RX and TX, set mac address
  Don't enable interrupts, as polling is the way here. (Also, not issuing
  INTR_ACK command stalls rcv, so it seems.)





                                                                     shacham
: xlrxok?  Look for a legitimate packet. Reject too large packets.


: xlrxeoc  Rcv End Of Channel, i.e. rcv stall, reload rx head
  and set address of rx list to xl.


: xlrxip  Mark ip/tcp/udp mbuf csum flags and data per reported xl status.
   IP stack checks this flags to save cksum computation cycles.
   First check for IP_CHECKED and IP_VALID.  Then DATA_VALID | PSEUDO_HDR
   for both tcp and udp. (True, a packet can't be both tcp and udp, but
   simplicity is a virtue, right?)
   Note - 3c905B specific capability. (Other non-3Com NICs also support it.)
   Note - bit manupulation looks clumsy, isn't it?

: xlrx  Scan ring buffer for received packets.
   Adjust mbuf length to actual data size, as reported in status.
   Convert ip/tcp/udp status report to mbuf flags and data.
   Then, deliver to Ethernet, and free list slot.





                                                                     shacham
: xltxovr?  Avoid overfilling the tx buffer.

: xltxip  Add ip/tcp/udp flags from m_pkthdr to status.
  Note - Accumulated data length is overwritten for 3c905B.

: xltxenc  Encapsulate mbuf to rxtxlist descriptor.  Up to #FRAGS frags are
  supported, but no more.
  Note - Keep accumulating packet data length logic, but commented out, as
  3c905B has no need for the total length.






: xltx  Transmit a packet defined by an mbuf chain.
  Single packet per call, at least for now.







                                                                     shacham
: xltxeof  Handle packet download (xmit) indication.






: xltxeoc  Handle xmit end-of-channel
   Note - avoid infinite loop reading TX_STATUS reg.


   Note - increasing min transmit packet size for each UNDERRUN seems, ahem,
    like black magic.



: xltimer  Follow the process of xl_intr().  As polling is the way, and ints
   are not enabled, don't check for status indicators.
   Note - the order at xl_watchdog() is reversed, followed by reset and init,
    so seems inadequate.




                                                                     shacham
Host to network order services, where host int is little endian 32-bit -
 htons, ntohs - identical
 hton, ntoh, htonl, ntohl - all identical.




: htons!  Write 16-bit in network order.
















                                                                     shacham








: enininput   Handle input ethernet packets in mbuf.




: enoutraw  Transmit a raw Ethernet packet.  xltx is the only tool, for now.

: enhdr  ld an Ethernet header from dhost, shost, and type.


: enbuild  Build an Ethernet packet


: enout  Try to resolve IP address to Ethernet address, and send if found.
   Else, an arp request is triggerred and mbuf is freed.

                                                                     shacham


: entxtst  Build a trivial Ethernet packet and xmit.
   (Not optimized, it's only a test word.)




















"