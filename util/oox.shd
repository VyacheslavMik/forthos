"




: free&off Release bucket memory pointed to, then clear pointer























: swap2 Swap the cells at this address and next

ordered? Record whether all keys are already in order
: bubSort Do a pass of a bubble sort, returning whether we needed to
 reorder any slots


:method Collection:ordered Return our contents, sorted by the 'key routine
   For less than 2, just return a simple copy of ourselves
   Hold contents and keys in dynamically allocated arrays
   Populate vals/keys with the value and its corresponding key value

   Now run bubble sort until everything is in order
   Create a List to hold the result
   Copy over the values, now that they are in order
   Clean up, then return this List







Flag to note when a mismatch in contents is found
: (=?) Iterator across contents of Collection, checking each member
 for membership in the other Collection (coll')
:method Collection:= Tell if two collections are equal
   They're not equal if their sizes are different
   Iterate across contents, verifying each member is in the other



















: (addit) Iterator, add another element to the target Collection
:method Collection:addAll Push all contents of self into another
 Collection

:method Collection:map Iterate a fn/arg across each member, put
 value of 'fn applied to member back into member's place.
 NB, do *not* use this unless ! never changes the physical
 organization of the Collection
:method Collection:copy Instantiate a new instance of this Collection
 subclass, then stuff all the old contents into it













"